name: .NET CI Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
#    - name: Cache SonarCloud packages
#      uses: actions/cache@v1
#      with:
#        path: ~\sonar\cache
#        key: ${{ runner.os }}-sonar
#        restore-keys: ${{ runner.os }}-sonar
    - name: Install SonarCloud scanners
      run: |
        dotnet tool install --global dotnet-sonarscanner

    - name: Restore dependencies
      run: |
        dotnet nuget add source --username ${{ github.triggering_actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/bjornbouetsmith/index.json"
        dotnet restore Source/ROOT.Zfs.sln

    - name: Prepare sonarcloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: dotnet-sonarscanner begin /k:"bjornbouetsmith_ROOT.Zfs" /o:"bjornbouetsmith" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

    - name: Build
      run: dotnet build Source/ROOT.Zfs.sln --no-restore

    - name: Test
      run: dotnet test --no-build Source/**/*.Tests.csproj --no-build --verbosity normal --filter "TestCategory!=Integration"

    - name: Analyze with sonarcloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
#    - name: Codecov
#      uses: codecov/codecov-action@v3
#      with:
#        fail_ci_if_error: true
#        directory: Source/ROOT.Zfs.Tests
    - name: Set status
      run: |
        curl \
        -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
         ${{ github.api_url }}/repos/${{ github.repository }}/statuses/${{ github.sha }} \
        -d '{"state":"success","target_url":"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}","description":"The build succeeded!","context":"continuous-integration/github"}'
